package feed

import (
	"fmt"

	"github.com/joeychilson/links/components/comment"
	"github.com/joeychilson/links/db"
	"github.com/joeychilson/links/pkg/session"
)

type CommentFeedProps struct {
	User        session.User
	CommentRows []db.CommentRow
	IsReply     bool
}

templ CommentFeed(props CommentFeedProps) {
	<div id="feed">
		for _, row := range props.CommentRows {
			<div class={ indent(props.IsReply) }>
				@comment.Component(comment.Props{User: props.User, CommentRow: row})
				<div id={ fmt.Sprintf("reply-%s", row.ID) }></div>
				if len(row.Children) > 0 {
					@CommentFeed(CommentFeedProps{User: props.User, CommentRows: row.Children, IsReply: true})
				}
			</div>
		}
	</div>
}

func indent(isReply bool) string {
	if isReply {
		return "ml-4"
	}
	return ""
}

type CommentFeedNavProps struct {
	LinkSlug string
	Feed     FeedType
}

templ CommentFeedNav(props CommentFeedNavProps) {
	<nav id="feed-nav" class="flex mt-4 space-x-2" hx-swap-oob="true">
		<a
 			hx-get={ fmt.Sprintf("/%s/feed/popular", props.LinkSlug) }
 			hx-target="#feed"
 			class={ "py-2 px-3 inline-flex items-center gap-2 text-sm font-medium text-center rounded-lg dark:focus:ring-1 dark:focus:ring-gray-600 dark:focus:outline-none", activeClass(Popular, props.Feed) }
		>
			Popular
		</a>
		<a
 			hx-get={ fmt.Sprintf("/%s/feed/controversial", props.LinkSlug) }
 			hx-target="#feed"
 			class={ "py-2 px-3 inline-flex items-center gap-2 text-sm font-medium text-center rounded-lg dark:focus:ring-1 dark:focus:ring-gray-600 dark:focus:outline-none", activeClass(Controversial, props.Feed) }
		>
			Controversial
		</a>
		<a
 			hx-get={ fmt.Sprintf("/%s/feed/latest", props.LinkSlug) }
 			hx-target="#feed"
 			class={ "py-2 px-3 inline-flex items-center gap-2 text-sm font-medium text-center rounded-lg dark:focus:ring-1 dark:focus:ring-gray-600 dark:focus:outline-none", activeClass(Latest, props.Feed) }
		>
			Latest
		</a>
	</nav>
}
