package feed

import (
	"github.com/joeychilson/links/components/link"
	"github.com/joeychilson/links/db"
	"github.com/joeychilson/links/layouts/app"
	"github.com/joeychilson/links/pkg/session"
)

type LinkFeedProps struct {
	User        session.User
	Title       string
	Description string
	FeedType    FeedType
	LinkRows    []db.LinkRow
}

templ LinkFeed(props LinkFeedProps) {
	@app.Layout(app.Props{Title: props.Title, Description: props.Description, User: props.User}) {
		<div class="max-w-6xl mx-auto px-2 sm:px-4 lg:px-6">
			@LinkFeedNav(LinkFeedNavProps{Feed: props.FeedType})
			<div id="feed">
				for _, row := range props.LinkRows {
					@link.Component(link.Props{User: props.User, LinkRow: row})
				}
			</div>
		</div>
	}
}

type FeedType string

const (
	Popular       FeedType = "popular"
	Latest        FeedType = "latest"
	Controversial FeedType = "controversial"
)

type LinkFeedNavProps struct {
	Feed FeedType
}

templ LinkFeedNav(props LinkFeedNavProps) {
	<nav id="feed-nav" class="flex mt-4 space-x-2">
		<a href="/" class={ "py-2 px-3 inline-flex items-center gap-2 text-sm font-medium text-center rounded-lg dark:focus:ring-1 dark:focus:ring-gray-600 dark:focus:outline-none", activeClass(Popular, props.Feed) }>
			Popular
		</a>
		<a href="/controversial" class={ "py-2 px-3 inline-flex items-center gap-2 text-sm font-medium text-center rounded-lg dark:focus:ring-1 dark:focus:ring-gray-600 dark:focus:outline-none", activeClass(Controversial, props.Feed) }>
			Controversial
		</a>
		<a href="/latest" class={ "py-2 px-3 inline-flex items-center gap-2 text-sm font-medium text-center rounded-lg dark:focus:ring-1 dark:focus:ring-gray-600 dark:focus:outline-none", activeClass(Latest, props.Feed) }>
			Latest
		</a>
	</nav>
}

func activeClass(feedType FeedType, currentFeed FeedType) string {
	if feedType == currentFeed {
		return "bg-blue-600 text-white"
	}
	return "bg-transparent text-gray-500 hover:text-blue-600 dark:hover:text-gray-400"
}
