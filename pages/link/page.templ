package link

import (
	"fmt"

	"github.com/joeychilson/links/database"
	"github.com/joeychilson/links/components/link"
	"github.com/joeychilson/links/pages/layout"
	"github.com/joeychilson/links/pkg/session"
	"github.com/joeychilson/links/pkg/time"
)

type Props struct {
	User     *session.User
	Link     database.FeedRow
	Comments []database.CommentRow
}

templ Page(props Props) {
	@layout.Layout(layout.Props{Title: props.Link.Title, User: props.User}) {
		@link.Component(link.Props{User: props.User, Link: props.Link, RedirectURL: fmt.Sprintf("/link?id=%s", props.Link.ID)})
		<div class="mb-4 bg-white shadow overflow-hidden sm:rounded-lg">
			<div class="px-4 py-4">
				<form action="/comment" method="POST" style="margin-bottom: 0;">
					<input type="hidden" name="link_id" value={ props.Link.ID.String() }/>
					<textarea
 						id="content"
 						name="content"
 						rows="4"
 						class="w-full rounded-lg text-sm border-gray-200 border p-2 resize-none focus:ring-2 focus:ring-blue-300"
 						placeholder="Leave a comment..."
					></textarea>
					<button
 						type="submit"
 						class="mt-3 bg-blue-600 text-white rounded-md px-4 py-2 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-300 ease-in-out"
					>
						Submit
					</button>
				</form>
			</div>
		</div>
		for _, comment := range props.Comments {
			<div class="mb-4 bg-white shadow overflow-hidden sm:rounded-lg">
				<div class="px-4 py-2">
					<div class="flex items-center justify-between">
						<!-- Thumbs up and like count -->
						<div class="flex items-center">
							<a href={ templ.SafeURL(fmt.Sprintf("/like?comment_id=%s&redirect_url=%s", comment.ID, "/")) }>
								<button class={ "font-semibold rounded-md focus:outline-none transition duration-300 ease-in-out" + " " + starButtonClass(props.Link.UserLiked) }>
									if props.Link.UserLiked == 1 {
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-8 h-8">
											<path d="M7.493 18.5c-.425 0-.82-.236-.975-.632A7.48 7.48 0 0 1 6 15.125c0-1.75.599-3.358 1.602-4.634.151-.192.373-.309.6-.397.473-.183.89-.514 1.212-.924a9.042 9.042 0 0 1 2.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 0 0 .322-1.672V2.75A.75.75 0 0 1 15 2a2.25 2.25 0 0 1 2.25 2.25c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 0 1-2.649 7.521c-.388.482-.987.729-1.605.729H14.23c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 0 0-1.423-.23h-.777ZM2.331 10.727a11.969 11.969 0 0 0-.831 4.398 12 12 0 0 0 .52 3.507C2.28 19.482 3.105 20 3.994 20H4.9c.445 0 .72-.498.523-.898a8.963 8.963 0 0 1-.924-3.977c0-1.708.476-3.305 1.302-4.666.245-.403-.028-.959-.5-.959H4.25c-.832 0-1.612.453-1.918 1.227Z"></path>
										</svg>
									} else {
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
											<path stroke-linecap="round" stroke-linejoin="round" d="M6.633 10.25c.806 0 1.533-.446 2.031-1.08a9.041 9.041 0 0 1 2.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 0 0 .322-1.672V2.75a.75.75 0 0 1 .75-.75 2.25 2.25 0 0 1 2.25 2.25c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282m0 0h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 0 1-2.649 7.521c-.388.482-.987.729-1.605.729H13.48c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 0 0-1.423-.23H5.904m10.598-9.75H14.25M5.904 18.5c.083.205.173.405.27.602.197.4-.078.898-.523.898h-.908c-.889 0-1.713-.518-1.972-1.368a12 12 0 0 1-.521-3.507c0-1.553.295-3.036.831-4.398C3.387 9.953 4.167 9.5 5 9.5h1.053c.472 0 .745.556.5.96a8.958 8.958 0 0 0-1.302 4.665c0 1.194.232 2.333.654 3.375Z"></path>
										</svg>
									}
								</button>
							</a>
						</div>
						<!-- User and time details -->
						<div class="flex-grow flex items-center justify-start space-x-4 px-4">
							<p class="text-sm text-gray-500">
								Posted By
								<a href={ templ.SafeURL(fmt.Sprintf("/user?name=%s", comment.Username)) } class="hover:underline">
									{ comment.Username }
								</a>
								&middot; 
								{ time.TimeAgo(comment.CreatedAt.Time.Unix()) }
								&middot; 
								{ fmt.Sprintf("%v likes", 0) }
								&middot; 
								<a href={ templ.SafeURL(fmt.Sprintf("/link?id=%s", props.Link.ID)) } class="hover:underline">
									{ fmt.Sprintf("%v comments", props.Link.CommentCount) }
								</a>
							</p>
						</div>
						<!-- Block button -->
						<div>
							<a href={ templ.SafeURL(fmt.Sprintf("/block?comment_id=%s&redirect_url=%s", comment.ID, "/")) }>
								<button class="text-sm text-gray-500 underline">
									Block
								</button>
							</a>
						</div>
					</div>
					<!-- Comment text -->
					<div class="mt-2 mb-2 text-sm text-gray-500">
						{ comment.Content }
					</div>
				</div>
			</div>
		}
	}
}

func starButtonClass(voted int32) string {
	if voted == 1 {
		return "text-yellow-400 hover:text-yellow-500"
	}
	return "text-gray-400 hover:text-gray-500"
}
