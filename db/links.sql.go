// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: links.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createLink = `-- name: CreateLink :one
INSERT INTO links (user_id, title, url, slug) VALUES ($1, $2, $3, $4) RETURNING slug
`

type CreateLinkParams struct {
	UserID uuid.UUID
	Title  string
	Url    string
	Slug   string
}

func (q *Queries) CreateLink(ctx context.Context, arg CreateLinkParams) (string, error) {
	row := q.db.QueryRow(ctx, createLink,
		arg.UserID,
		arg.Title,
		arg.Url,
		arg.Slug,
	)
	var slug string
	err := row.Scan(&slug)
	return slug, err
}

const linkBySlug = `-- name: LinkBySlug :one
SELECT id, user_id, title, url, slug, created_at, updated_at FROM links WHERE slug = $1
`

func (q *Queries) LinkBySlug(ctx context.Context, slug string) (Link, error) {
	row := q.db.QueryRow(ctx, linkBySlug, slug)
	var i Link
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Title,
		&i.Url,
		&i.Slug,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
